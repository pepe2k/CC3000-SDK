var ti_sysbios_BIOS = xdc.useModule('ti.sysbios.BIOS');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Idle = xdc.useModule('ti.sysbios.knl.Idle');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var Error = xdc.useModule('xdc.runtime.Error');

/* ================ Driver configuration ================ */
var TIRTOS = xdc.useModule('ti.tirtos.TIRTOS');
var GPIO = xdc.useModule('ti.drivers.GPIO');

//Program.stack = 0x2000;
//Task.defaultStackSize = 0x1000;

var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Text = xdc.useModule('xdc.runtime.Text');
//var Diags = xdc.useModule('xdc.runtimg.Diags');
var System = xdc.useModule('xdc.runtime.System');
var SysMin = xdc.useModule('xdc.runtime.SysMin');
var Error = xdc.useModule('xdc.runtime.Error');
//var Clock = xdc.useModule('ti.sysbios.knl.Clock');

ti_sysbios_BIOS.libType = ti_sysbios_BIOS.LibType_Custom;

Program.argSize = 0x4;
Defaults.common$.namedModule = false;
Text.isLoaded = false;
System.maxAtexitHandlers = 0;

ti_sysbios_BIOS.swiEnabled = false;
ti_sysbios_BIOS.clockEnabled = false;
//ti_sysbios_BIOS.taskEnabled = false;

//SysMin.bufSize = 0;
SysMin.flushAtExit = false;
System.SupportProxy = SysMin;

//Remove Error_raiseHook, which brings System_printf
Error.raiseHook = null;
ti_sysbios_BIOS.rtsGateType = ti_sysbios_BIOS.NoLocking;


/* Create task */
var task0Params = new Task.Params();
task0Params.instance.name = "launcher";
task0Params.vitalTaskFlag = false;
task0Params.priority = 3;
task0Params.stackSize = 0x400;
Program.global.server = Task.create("&launch_service", task0Params);

Task.enableIdleTask = false;
Task.allBlockedFunc = Idle.run;

//Idle.idleFxns[0] = "&idle_fun";
